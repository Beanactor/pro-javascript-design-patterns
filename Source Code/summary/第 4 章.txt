第四章	继承

4.1 为啥要继承
	1.减少代码
	带来了弊端： 产生耦合

4.2  类式继承
	子类派生过程封装到extend函数中，即 Source Code 4.03 
	
	
4.3  原型式继承
	使用场合 ： 内存效率比较重要的场合，因为原型式继承更能节约内存 见 4.4 
	先创建对象，然后对其进行克隆（调用clone函数），从而创建子类和实例	即 Source Code 4.06 
	对象具有到自己原型对象的反向链接，即父类继承子类。
	
4.4 原型式继承与类式继承对比

	1.原型式继承更能节约内存
	在原型链中查找成员的方式使得所有克隆出来的对象都共享每个属性和方法的唯一一份实例，
	只有在直接设置做了某个克隆出来的对象的属性和方法时，情况才会有变化。
	而  在类式继承方式中创建的每一个对象在内存中都有自己的一套属性（和私有方法）的副本

4.5 继承与封装


4.6 掺元继承  （ 多亲继承 ） 
	特点：既能让对象和类共享一些方法又不需要让他们竭诚父子关系，
	
	使用场景： 想让各种有着较大差异的类共享一些通用方法；
	
	步骤：先创建一个包含各种通用方法的类，然后再用它扩充其他类（调用 augment 函数）
	
	
	
	
	
	
	
	
