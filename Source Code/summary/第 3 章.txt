第三章	封装和信息隐藏

3.1  信息隐藏原则

  两个参与者通过明确的通道传达信息，有助于减轻系统参与者之间的依赖，即降低数据之间的耦合
  
3.1.1  封装与信息隐藏

   只是一种概念的两种表述
   封装：对对象的内部数据表现形式和实现细节进行隐藏。使用自定义的操作，访问封装过得对象中的数据。 
   
3.1.2 接口扮演的角色

  为所有类定义接口，类只向外界提供实现接口中规定的方法，任何别的方法都留作自用。
  所有属性都是私有，外界只能通过接口中定义的存取操与之打交道。
  
3.2 创建对象的基本模式

 创建对象三种方式
 1. 只提供公用成员，构造函数实现
 2. 使用下滑线表示方法和属性的私用性，用命名规范区分私有成员，
        只是一种约定，并不是真正可以用来隐藏对象内部数据的解决方案
 3. 使用闭包创建真正的私有变量（方法和属性）
 	优点： 1.可以创建真正的私有属性，必须通过赋值器设置属性
 	缺点： 1.每生成一个新的对象实例，都会为每一个私有方法和特权方法生成一个副本，消耗内存；
 		  2.用闭包实现私有成员导致的派生问题，即“ 继承破坏封装 ” ；
 		   如果创建的类以后需要派生子类，不要用闭包
